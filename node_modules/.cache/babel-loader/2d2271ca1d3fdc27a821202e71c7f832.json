{"ast":null,"code":"var _jsxFileName = \"/Users/smekiboy/Desktop/weather/src/App.js\";\n// import logo from './logo.svg';\nimport React, { Component } from 'react';\nimport './App.css';\nimport Clock from 'react-live-clock';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      latitude: null,\n      longitude: null,\n      temp: null,\n      locationName: null,\n      country: null\n    };\n\n    this.getPostions = () => {\n      return new Promise(function (resolve, reject) {\n        navigator.geolocation.getCurrentPosition(resolve, reject);\n      });\n    };\n\n    this.getWeather = async (latitude, longitude) => {\n      const api = await fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&units=metric&appid=38ff886a4e3b7104f324a6067130ef6a`);\n      const data = await api.json();\n      console.log(data);\n      this.setState({\n        temp: Math.round(data.main.temp),\n        locationName: data.name,\n        country: data.sys.country\n      });\n    };\n  }\n\n  componentDidMount() {\n    if (navigator.geolocation) {\n      this.getPostions().then(position => {\n        console.log(position.coords.latitude); // this.setState({ latitude: position.coords.latitude })\n\n        this.getWeather(position.coords.latitude, position.coords.longitude);\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-8 d-flex justify-content-center py-5\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-6 app-bg d-flex flex-wrap py-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-white m-0\",\n              children: this.state.locationName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-white\",\n              children: this.state.country\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12 mt-auto d-flex\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"my-auto\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"text-white m-0\",\n                children: /*#__PURE__*/_jsxDEV(Clock, {\n                  format: 'HH:mm:ss',\n                  ticking: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 48\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-white m-0\",\n                children: /*#__PURE__*/_jsxDEV(Clock, {\n                  date: '',\n                  format: 'dddd, MMMM DD, YYYY'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ml-auto\",\n              children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"text-white\",\n                children: [this.state.temp, \"\\xB0C\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/smekiboy/Desktop/weather/src/App.js"],"names":["React","Component","Clock","App","state","latitude","longitude","temp","locationName","country","getPostions","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","getWeather","api","fetch","data","json","console","log","setState","Math","round","main","name","sys","componentDidMount","then","position","coords","render"],"mappings":"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","sourcesContent":["// import logo from './logo.svg';\nimport React, { Component } from 'react';\nimport './App.css';\nimport Clock from 'react-live-clock';\n\nclass App extends React.Component {\n  state = {\n    latitude: null,\n    longitude: null,\n    temp: null,\n    locationName: null,\n    country: null\n  }\n\n  componentDidMount() {\n    if (navigator.geolocation) {\n      this.getPostions()\n        .then((position) => {\n          console.log(position.coords.latitude);\n          // this.setState({ latitude: position.coords.latitude })\n          this.getWeather(position.coords.latitude, position.coords.longitude)\n        })\n    }\n  }\n\n  getPostions = () => {\n    return new Promise(function (resolve, reject) {\n      navigator.geolocation.getCurrentPosition(resolve, reject);\n    });\n  };\n\n  getWeather = async (latitude, longitude) => {\n    const api = await fetch(\n      `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&units=metric&appid=38ff886a4e3b7104f324a6067130ef6a`\n    );\n    const data = await api.json();\n    console.log(data);\n    this.setState(\n      {\n        temp: Math.round(data.main.temp),\n        locationName: data.name,\n        country: data.sys.country\n      }\n    )\n  }\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"col-8 d-flex justify-content-center py-5\">\n          <div className=\"col-6 app-bg d-flex flex-wrap py-3\">\n            <div className=\"col-12\">\n              <h2 className=\"text-white m-0\">{(this.state.locationName)}</h2>\n              <p className=\"text-white\">{(this.state.country)}</p>\n            </div>\n            <div className=\"col-12 mt-auto d-flex\">\n              <div className=\"my-auto\">\n                <h2 className=\"text-white m-0\"><Clock format={'HH:mm:ss'} ticking={true} /></h2>\n                <p className=\"text-white m-0\">\n                  <Clock date={''} format={'dddd, MMMM DD, YYYY'} />\n                </p>\n              </div>\n              <div className=\"ml-auto\">\n                <h1 className=\"text-white\">{(this.state.temp)}°C</h1>\n              </div>\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}