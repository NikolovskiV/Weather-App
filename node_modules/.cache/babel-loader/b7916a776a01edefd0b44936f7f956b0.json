{"ast":null,"code":"var _jsxFileName = \"/Users/smekiboy/Desktop/weather/src/_components/Results.js\";\nimport React from 'react'; // import { Fragment } from 'react';\n\nimport Button from './Button';\nimport DatesContainer from './DatesContainer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Results extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.view = () => {\n      const {\n        showWhat,\n        city,\n        country,\n        results\n      } = this.props;\n      console.log('results.prop', this.props);\n      let resultsView;\n\n      switch (showWhat) {\n        case \"notFound\":\n          resultsView = /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Sorry! We couldn't find that city.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 31\n          }, this);\n          break;\n\n        case \"results\":\n          resultsView = /*#__PURE__*/_jsxDEV(DatesContainer, {\n            city: city,\n            country: country,\n            results: results\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 31\n          }, this);\n          break;\n\n        default:\n          break;\n      }\n\n      return resultsView;\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results\",\n      children: [this.props.showWhat ? /*#__PURE__*/_jsxDEV(Button, {\n        clickHandler: this.props.handleClear,\n        btnCopy: \"Get Different Forecast\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 25\n      }, this) : \"\", this.view(), this.props.showWhat === \"results\" ?\n      /*#__PURE__*/\n      // show the button again at the bottom if real results are returned\n      _jsxDEV(Button, {\n        clickHandler: this.props.handleClear,\n        btnCopy: \"Get Different Forecast\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 25\n      }, this) : \"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/smekiboy/Desktop/weather/src/_components/Results.js"],"names":["React","Button","DatesContainer","Results","Component","view","showWhat","city","country","results","props","console","log","resultsView","render","handleClear"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AAEA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAEA,eAAe,MAAMC,OAAN,SAAsBH,KAAK,CAACI,SAA5B,CAAsC;AAAA;AAAA;;AAAA,SACjDC,IADiD,GAC1C,MAAM;AACT,YAAM;AAAEC,QAAAA,QAAF;AAAYC,QAAAA,IAAZ;AAAkBC,QAAAA,OAAlB;AAA2BC,QAAAA;AAA3B,UAAuC,KAAKC,KAAlD;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4B,KAAKF,KAAjC;AAEA,UAAIG,WAAJ;;AACA,cAAQP,QAAR;AACI,aAAK,UAAL;AACIO,UAAAA,WAAW,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAd;AACA;;AACJ,aAAK,SAAL;AACIA,UAAAA,WAAW,gBAAG,QAAC,cAAD;AAAgB,YAAA,IAAI,EAAEN,IAAtB;AAA4B,YAAA,OAAO,EAAEC,OAArC;AAA8C,YAAA,OAAO,EAAEC;AAAvD;AAAA;AAAA;AAAA;AAAA,kBAAd;AACA;;AACJ;AACI;AARR;;AAWA,aAAOI,WAAP;AACH,KAnBgD;AAAA;;AAqBjDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,iBAES,KAAKJ,KAAL,CAAWJ,QAAZ,gBACI,QAAC,MAAD;AAAQ,QAAA,YAAY,EAAE,KAAKI,KAAL,CAAWK,WAAjC;AACI,QAAA,OAAO,EAAC;AADZ;AAAA;AAAA;AAAA;AAAA,cADJ,GAGM,EALd,EAQK,KAAKV,IAAL,EARL,EAWS,KAAKK,KAAL,CAAWJ,QAAX,KAAwB,SAAzB;AAAA;AAAsC;AAClC,cAAC,MAAD;AAAQ,QAAA,YAAY,EAAE,KAAKI,KAAL,CAAWK,WAAjC;AACI,QAAA,OAAO,EAAC;AADZ;AAAA;AAAA;AAAA;AAAA,cADJ,GAGM,EAdd;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAmBH;;AAzCgD","sourcesContent":["import React from 'react';\n// import { Fragment } from 'react';\n\nimport Button from './Button';\nimport DatesContainer from './DatesContainer';\n\nexport default class Results extends React.Component {\n    view = () => {\n        const { showWhat, city, country, results } = this.props;\n\n        console.log('results.prop', this.props);\n\n        let resultsView;\n        switch (showWhat) {\n            case \"notFound\":\n                resultsView = <h2>Sorry! We couldn't find that city.</h2>;\n                break;\n            case \"results\":\n                resultsView = <DatesContainer city={city} country={country} results={results} />;\n                break;\n            default:\n                break;\n        }\n\n        return resultsView;\n    }\n\n    render() {\n        return (\n            <div className=\"results\">\n                {\n                    (this.props.showWhat) ?\n                        <Button clickHandler={this.props.handleClear}\n                            btnCopy=\"Get Different Forecast\" />\n                        : \"\"\n                }\n\n                {this.view()}\n\n                {\n                    (this.props.showWhat === \"results\") ? // show the button again at the bottom if real results are returned\n                        <Button clickHandler={this.props.handleClear}\n                            btnCopy=\"Get Different Forecast\" />\n                        : \"\"\n                }\n            </div>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}