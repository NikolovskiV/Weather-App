"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.request = void 0;
var util_1 = require("./util");
var unification_1 = require("./unification");
exports.request = function (query, fetchImpl, storage, reportError) { return __awaiter(void 0, void 0, void 0, function () {
    var tried, stored, response, json, unified, e_1;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                tried = requestImpl(query);
                if (tried === null) {
                    return [2 /*return*/, null];
                }
                stored = storage.getItem(tried[0]);
                if (stored) {
                    return [2 /*return*/, JSON.parse(stored)];
                }
                _a.label = 1;
            case 1:
                _a.trys.push([1, 6, , 7]);
                return [4 /*yield*/, fetchImpl(tried[0])];
            case 2:
                response = _a.sent();
                if (!(response.status === 200)) return [3 /*break*/, 4];
                return [4 /*yield*/, response.json()];
            case 3:
                json = _a.sent();
                json.kind = tried[1];
                unified = unification_1.UnifyApiResponse(json);
                storage.setItem(tried[0], JSON.stringify(unified));
                return [2 /*return*/, unified];
            case 4:
                reportError(response);
                _a.label = 5;
            case 5: return [3 /*break*/, 7];
            case 6:
                e_1 = _a.sent();
                reportError(e_1);
                return [3 /*break*/, 7];
            case 7: return [2 /*return*/, null];
        }
    });
}); };
var requestImpl = function (query) {
    var base = byDate(query);
    return base ? ["https://" + base[0] + byQuery(query) + (query.units ? "&units=" + query.units : '') + "&appid=" + query.appid + (query.lang && query.lang !== 'en' && query.lang !== 'us' ? "&lang=" + query.lang : ''), base[1]] : null;
};
var byDate = function (query) {
    if (util_1.isBetween(util_1.today(), util_1.fourDaysFromNow(), query) && query.by === 'hour' && query.isPro) {
        return ['pro.openweathermap.org/data/2.5/forecast/hourly?', 'hourly'];
    }
    if (util_1.isBetween(util_1.today(), util_1.sixteenDaysAhead(), query) && query.isPro) {
        return ['api.openweathermap.org/data/2.5/forecast/daily?cnt=16&', '16day'];
    }
    if (util_1.isBetween(util_1.today(), util_1.thirtyDaysAhead(), query) && query.isPro) {
        return ['pro.openweathermap.org/data/2.5/forecast/climate?', '30day'];
    }
    if (util_1.isDaily(query) && util_1.fromSameHour(query) && query.kind === 'geo') {
        return ["api.openweathermap.org/data/2.5/onecall?exclude=minutely" + (query.by === 'day' ? ',hourly' : '') + "&", 'onecall'];
    }
    if (query.kind === 'geo' && util_1.isPast(query)) {
        return ["api.openweathermap.org/data/2.5/onecall/timemachine?exclude=minutely" + (query.by === 'day' ? ',hourly' : '') + "&dt=" + Math.floor(util_1.getUtcFromLocal(query.from.getTime()) / 1000) + "&", 'onecall'];
    }
    if (util_1.isDaily(query) && util_1.fromSameHour(query) && query.by === 'day' && query.kind !== 'ids') {
        return ['api.openweathermap.org/data/2.5/weather?', 'daily'];
    }
    if (util_1.isDaily(query) && util_1.fromSameHour(query) && query.by === 'day' && query.kind === 'ids') {
        return ['api.openweathermap.org/data/2.5/group?', 'group'];
    }
    if (util_1.isBetween(util_1.today(), util_1.fiveDaysFromNow(), query)) {
        return ['api.openweathermap.org/data/2.5/forecast?', '5day'];
    }
    return null;
};
var byQuery = function (query) {
    switch (query.kind) {
        case 'city':
            return byCityName(query);
        case 'geo':
            return byGeo(query);
        case 'id':
            return byCityId(query);
        case 'ids':
            return byCitiesId(query);
        case 'zip':
            return byZip(query);
    }
};
var byCityName = function (query) { return "q=" + util_1.arrayToUrl(query.cityName, query.stateCode, query.countryCode); };
var byCityId = function (query) { return "id=" + query.cityId; };
var byCitiesId = function (query) { return "id=" + query.citiesId.join(','); };
var byGeo = function (query) { return "lat=" + query.lat + "&lon=" + query.lon; };
var byZip = function (query) { return "zip=" + query.zipCode + (query.countryCode ? "," + query.countryCode : ''); };
