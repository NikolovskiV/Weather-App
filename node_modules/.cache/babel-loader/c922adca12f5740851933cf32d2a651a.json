{"ast":null,"code":"var _jsxFileName = \"/Users/smekiboy/Desktop/weather/src/components/CelsiusCard.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CelsiusCard extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.tempToConvertRef = /*#__PURE__*/React.createRef();\n\n    this.onChangeHandler = e => {\n      let newCelsius = this.tempToConvertRef.current.value;\n      let newFahrenheit;\n      newFahrenheit = newCelsius * 9 / 5 + 32;\n      const rounded = Math.round(newFahrenheit * 1000) / 1000;\n      this.props.getNewTempValue(newCelsius, rounded);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Celsius\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        onChange: this.onChangeHandler,\n        value: this.props.celsius,\n        ref: this.tempToConvertRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default CelsiusCard;","map":{"version":3,"sources":["/Users/smekiboy/Desktop/weather/src/components/CelsiusCard.js"],"names":["React","CelsiusCard","Component","tempToConvertRef","createRef","onChangeHandler","e","newCelsius","current","value","newFahrenheit","rounded","Math","round","props","getNewTempValue","render","celsius"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,WAAN,SAA0BD,KAAK,CAACE,SAAhC,CAA0C;AAAA;AAAA;AAAA,SAEtCC,gBAFsC,gBAEnBH,KAAK,CAACI,SAAN,EAFmB;;AAAA,SAItCC,eAJsC,GAIpBC,CAAC,IAAI;AACnB,UAAIC,UAAU,GAAG,KAAKJ,gBAAL,CAAsBK,OAAtB,CAA8BC,KAA/C;AACA,UAAIC,aAAJ;AACAA,MAAAA,aAAa,GAAIH,UAAU,GAAG,CAAd,GAAmB,CAAnB,GAAuB,EAAvC;AACA,YAAMI,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWH,aAAa,GAAG,IAA3B,IAAmC,IAAnD;AACA,WAAKI,KAAL,CAAWC,eAAX,CAA2BR,UAA3B,EAAuCI,OAAvC;AACH,KAVqC;AAAA;;AAYtCK,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AACI,QAAA,IAAI,EAAC,QADT;AAEI,QAAA,QAAQ,EAAE,KAAKX,eAFnB;AAGI,QAAA,KAAK,EAAE,KAAKS,KAAL,CAAWG,OAHtB;AAII,QAAA,GAAG,EAAE,KAAKd;AAJd;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAWH;;AAxBqC;;AA2B1C,eAAeF,WAAf","sourcesContent":["import React from \"react\";\n\nclass CelsiusCard extends React.Component {\n\n    tempToConvertRef = React.createRef();\n\n    onChangeHandler = e => {\n        let newCelsius = this.tempToConvertRef.current.value;\n        let newFahrenheit;\n        newFahrenheit = (newCelsius * 9) / 5 + 32;\n        const rounded = Math.round(newFahrenheit * 1000) / 1000;\n        this.props.getNewTempValue(newCelsius, rounded);\n    };\n\n    render() {\n        return (\n            <div>\n                <h1>Celsius</h1>\n                <input\n                    type=\"number\"\n                    onChange={this.onChangeHandler}\n                    value={this.props.celsius}\n                    ref={this.tempToConvertRef}\n                />\n            </div>\n        );\n    }\n}\n\nexport default CelsiusCard;\n"]},"metadata":{},"sourceType":"module"}