{"ast":null,"code":"var _jsxFileName = \"/Users/smekiboy/Desktop/weather/src/WeekContainer.js\";\nimport React from 'react';\nimport DayCard from './DayCard';\nimport DegreeToggle from './DegreeToggle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass WeekContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      fullData: [],\n      dailyData: [],\n      degreeType: \"fahrenheit\"\n    };\n\n    this.updateForecastDegree = event => {\n      this.setState({\n        degreeType: event.target.value\n      }, () => console.log(this.state));\n    };\n\n    this.componentDidMount = (latitude, longitude) => {\n      const weatherURL = `http://api.openweathermap.org/data/2.5/forecast?lat=${latitude}&lon=${longitude}&appid=38ff886a4e3b7104f324a6067130ef6a`;\n      console.log(weatherURL);\n      fetch(weatherURL).then(res => res.json()).then(data => {\n        const dailyData = data.list.filter(reading => reading.dt_txt.includes(\"18:00:00\"));\n        this.setState({\n          fullData: data.list,\n          dailyData: dailyData\n        }, () => console.log(this.state));\n      });\n    };\n\n    this.formatDayCards = () => {\n      return this.state.dailyData.map((reading, index) => /*#__PURE__*/_jsxDEV(DayCard, {\n        degreeType: this.state.degreeType,\n        reading: reading\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 61\n      }, this));\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(DegreeToggle, {\n        degreeType: this.state.degreeType,\n        updateForecastDegree: this.updateForecastDegree\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-white m-0\",\n          children: this.state.locationName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row justify-content-center\",\n        children: this.formatDayCards()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default WeekContainer;","map":{"version":3,"sources":["/Users/smekiboy/Desktop/weather/src/WeekContainer.js"],"names":["React","DayCard","DegreeToggle","WeekContainer","Component","state","fullData","dailyData","degreeType","updateForecastDegree","event","setState","target","value","console","log","componentDidMount","latitude","longitude","weatherURL","fetch","then","res","json","data","list","filter","reading","dt_txt","includes","formatDayCards","map","index","render","locationName"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;;AAGA,MAAMC,aAAN,SAA4BH,KAAK,CAACI,SAAlC,CAA4C;AAAA;AAAA;AAAA,SACxCC,KADwC,GAChC;AACJC,MAAAA,QAAQ,EAAE,EADN;AAEJC,MAAAA,SAAS,EAAE,EAFP;AAGJC,MAAAA,UAAU,EAAE;AAHR,KADgC;;AAAA,SAOxCC,oBAPwC,GAOjBC,KAAK,IAAI;AAC5B,WAAKC,QAAL,CAAc;AACVH,QAAAA,UAAU,EAAEE,KAAK,CAACE,MAAN,CAAaC;AADf,OAAd,EAEG,MAAMC,OAAO,CAACC,GAAR,CAAY,KAAKV,KAAjB,CAFT;AAGH,KAXuC;;AAAA,SAaxCW,iBAbwC,GAapB,CAACC,QAAD,EAAWC,SAAX,KAAyB;AACzC,YAAMC,UAAU,GACX,uDAAsDF,QAAS,QAAOC,SAAU,yCADrF;AAGAJ,MAAAA,OAAO,CAACC,GAAR,CAAYI,UAAZ;AAEAC,MAAAA,KAAK,CAACD,UAAD,CAAL,CACKE,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUG,IAAI,IAAI;AACV,cAAMjB,SAAS,GAAGiB,IAAI,CAACC,IAAL,CAAUC,MAAV,CAAiBC,OAAO,IAAIA,OAAO,CAACC,MAAR,CAAeC,QAAf,CAAwB,UAAxB,CAA5B,CAAlB;AACA,aAAKlB,QAAL,CAAc;AACVL,UAAAA,QAAQ,EAAEkB,IAAI,CAACC,IADL;AAEVlB,UAAAA,SAAS,EAAEA;AAFD,SAAd,EAGG,MAAMO,OAAO,CAACC,GAAR,CAAY,KAAKV,KAAjB,CAHT;AAIH,OARL;AASH,KA5BuC;;AAAA,SA8BxCyB,cA9BwC,GA8BvB,MAAM;AACnB,aAAO,KAAKzB,KAAL,CAAWE,SAAX,CAAqBwB,GAArB,CAAyB,CAACJ,OAAD,EAAUK,KAAV,kBAAoB,QAAC,OAAD;AAAS,QAAA,UAAU,EAAE,KAAK3B,KAAL,CAAWG,UAAhC;AAA4C,QAAA,OAAO,EAAEmB;AAArD,SAAmEK,KAAnE;AAAA;AAAA;AAAA;AAAA,cAA7C,CAAP;AACH,KAhCuC;AAAA;;AAkCxCC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI,QAAC,YAAD;AAAc,QAAA,UAAU,EAAE,KAAK5B,KAAL,CAAWG,UAArC;AAAiD,QAAA,oBAAoB,EAAE,KAAKC;AAA5E;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,KAAD,CAAO,QAAP;AAAA,+BACI;AAAI,UAAA,SAAS,EAAC,gBAAd;AAAA,oBAAiC,KAAKJ,KAAL,CAAW6B;AAA5C;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFJ,eAKI;AAAK,QAAA,SAAS,EAAC,4BAAf;AAAA,kBAEK,KAAKJ,cAAL;AAFL;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAaH;;AAhDuC;;AAmD5C,eAAe3B,aAAf","sourcesContent":["import React from 'react';\nimport DayCard from './DayCard';\nimport DegreeToggle from './DegreeToggle';\n\n\nclass WeekContainer extends React.Component {\n    state = {\n        fullData: [],\n        dailyData: [],\n        degreeType: \"fahrenheit\",\n    }\n\n    updateForecastDegree = event => {\n        this.setState({\n            degreeType: event.target.value\n        }, () => console.log(this.state))\n    }\n\n    componentDidMount = (latitude, longitude) => {\n        const weatherURL =\n            `http://api.openweathermap.org/data/2.5/forecast?lat=${latitude}&lon=${longitude}&appid=38ff886a4e3b7104f324a6067130ef6a`\n\n        console.log(weatherURL);\n\n        fetch(weatherURL)\n            .then(res => res.json())\n            .then(data => {\n                const dailyData = data.list.filter(reading => reading.dt_txt.includes(\"18:00:00\"))\n                this.setState({\n                    fullData: data.list,\n                    dailyData: dailyData,\n                }, () => console.log(this.state))\n            })\n    }\n\n    formatDayCards = () => {\n        return this.state.dailyData.map((reading, index) => <DayCard degreeType={this.state.degreeType} reading={reading} key={index} />)\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <DegreeToggle degreeType={this.state.degreeType} updateForecastDegree={this.updateForecastDegree} />\n                <React.Fragment>\n                    <h2 className=\"text-white m-0\">{(this.state.locationName)}</h2>\n                </React.Fragment>\n                <div className=\"row justify-content-center\">\n\n                    {this.formatDayCards()}\n\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default WeekContainer;"]},"metadata":{},"sourceType":"module"}