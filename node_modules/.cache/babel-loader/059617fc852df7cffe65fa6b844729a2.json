{"ast":null,"code":"var _jsxFileName = \"/Users/smekiboy/Desktop/weather/src/WeekContainer.js\";\nimport React from 'react';\nimport apiConfig from './apiKeys';\nimport DayCard from './DayCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass WeekContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      fullData: [],\n      dailyData: [],\n      degreeType: \"fahrenheit\"\n    };\n\n    this.updateForecastDegree = event => {\n      this.setState({\n        degreeType: event.target.value\n      }, () => console.log(this.state));\n    };\n\n    this.componentDidMount = () => {\n      const weatherURL = `http://api.openweathermap.org/data/2.5/forecast?zip=11102&units=imperial&APPID=${apiConfig.owmKey}`;\n      fetch(weatherURL).then(res => res.json()).then(data => {\n        const dailyData = data.list.filter(reading => reading.dt_txt.includes(\"18:00:00\"));\n        this.setState({\n          fullData: data.list,\n          dailyData: dailyData\n        }, () => console.log(this.state));\n      });\n    };\n\n    this.formatDayCards = () => {\n      return this.state.dailyData.map((reading, index) => /*#__PURE__*/_jsxDEV(DayCard, {\n        reading: reading\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 61\n      }, this));\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row justify-content-center\",\n        children: this.formatDayCards()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default WeekContainer;","map":{"version":3,"sources":["/Users/smekiboy/Desktop/weather/src/WeekContainer.js"],"names":["React","apiConfig","DayCard","WeekContainer","Component","state","fullData","dailyData","degreeType","updateForecastDegree","event","setState","target","value","console","log","componentDidMount","weatherURL","owmKey","fetch","then","res","json","data","list","filter","reading","dt_txt","includes","formatDayCards","map","index","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAEA,MAAMC,aAAN,SAA4BH,KAAK,CAACI,SAAlC,CAA4C;AAAA;AAAA;AAAA,SACxCC,KADwC,GAChC;AACJC,MAAAA,QAAQ,EAAE,EADN;AAEJC,MAAAA,SAAS,EAAE,EAFP;AAGJC,MAAAA,UAAU,EAAE;AAHR,KADgC;;AAAA,SAOxCC,oBAPwC,GAOjBC,KAAK,IAAI;AAC5B,WAAKC,QAAL,CAAc;AACVH,QAAAA,UAAU,EAAEE,KAAK,CAACE,MAAN,CAAaC;AADf,OAAd,EAEG,MAAMC,OAAO,CAACC,GAAR,CAAY,KAAKV,KAAjB,CAFT;AAGH,KAXuC;;AAAA,SAaxCW,iBAbwC,GAapB,MAAM;AACtB,YAAMC,UAAU,GACX,kFAAiFhB,SAAS,CAACiB,MAAO,EADvG;AAGAC,MAAAA,KAAK,CAACF,UAAD,CAAL,CACKG,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUG,IAAI,IAAI;AACV,cAAMhB,SAAS,GAAGgB,IAAI,CAACC,IAAL,CAAUC,MAAV,CAAiBC,OAAO,IAAIA,OAAO,CAACC,MAAR,CAAeC,QAAf,CAAwB,UAAxB,CAA5B,CAAlB;AACA,aAAKjB,QAAL,CAAc;AACVL,UAAAA,QAAQ,EAAEiB,IAAI,CAACC,IADL;AAEVjB,UAAAA,SAAS,EAAEA;AAFD,SAAd,EAGG,MAAMO,OAAO,CAACC,GAAR,CAAY,KAAKV,KAAjB,CAHT;AAIH,OARL;AASH,KA1BuC;;AAAA,SA4BxCwB,cA5BwC,GA4BvB,MAAM;AACnB,aAAO,KAAKxB,KAAL,CAAWE,SAAX,CAAqBuB,GAArB,CAAyB,CAACJ,OAAD,EAAUK,KAAV,kBAAoB,QAAC,OAAD;AAAS,QAAA,OAAO,EAAEL;AAAlB,SAAgCK,KAAhC;AAAA;AAAA;AAAA;AAAA,cAA7C,CAAP;AACH,KA9BuC;AAAA;;AAgCxCC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BAGI;AAAK,QAAA,SAAS,EAAC,4BAAf;AAAA,kBAEK,KAAKH,cAAL;AAFL;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAWH;;AA5CuC;;AA+C5C,eAAe1B,aAAf","sourcesContent":["import React from 'react';\nimport apiConfig from './apiKeys';\nimport DayCard from './DayCard';\n\nclass WeekContainer extends React.Component {\n    state = {\n        fullData: [],\n        dailyData: [],\n        degreeType: \"fahrenheit\"\n    }\n\n    updateForecastDegree = event => {\n        this.setState({\n            degreeType: event.target.value\n        }, () => console.log(this.state))\n    }\n\n    componentDidMount = () => {\n        const weatherURL =\n            `http://api.openweathermap.org/data/2.5/forecast?zip=11102&units=imperial&APPID=${apiConfig.owmKey}`\n\n        fetch(weatherURL)\n            .then(res => res.json())\n            .then(data => {\n                const dailyData = data.list.filter(reading => reading.dt_txt.includes(\"18:00:00\"))\n                this.setState({\n                    fullData: data.list,\n                    dailyData: dailyData\n                }, () => console.log(this.state))\n            })\n    }\n\n    formatDayCards = () => {\n        return this.state.dailyData.map((reading, index) => <DayCard reading={reading} key={index} />)\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                {/* <h1 className=\"display-1 jumbotron\">5-Day Forecast.</h1>\n                <h5 className=\"display-5 text-muted\">New York, US</h5> */}\n                <div className=\"row justify-content-center\">\n\n                    {this.formatDayCards()}\n\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default WeekContainer;"]},"metadata":{},"sourceType":"module"}