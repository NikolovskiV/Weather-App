{"ast":null,"code":"import _slicedToArray from\"/Users/smekiboy/Desktop/weather/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import Conditions from'../Conditions/Conditions';import classes from'./Forecast.module.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Forecast=function Forecast(){var _useState=useState({}),_useState2=_slicedToArray(_useState,2),responseObj=_useState2[0],setResponseObj=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),city=_useState4[0],setCity=_useState4[1];var _useState5=useState('imperial'),_useState6=_slicedToArray(_useState5,2),unit=_useState6[0],setUnit=_useState6[1];var uriEncodedCity=encodeURIComponent(city);var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),error=_useState8[0],setError=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),loading=_useState10[0],setLoading=_useState10[1];function getForecast(e){e.preventDefault();if(city.length===0){return setError(true);}// Clear state in preparation for new data\nsetError(false);setResponseObj({});setLoading(true);var uriEncodedCity=encodeURIComponent(city);fetch(\"https://community-open-weather-map.p.rapidapi.com/weather?units=\".concat(unit,\"&q=\").concat(uriEncodedCity),{\"method\":\"GET\",\"headers\":{\"x-rapidapi-host\":\"community-open-weather-map.p.rapidapi.com\",\"x-rapidapi-key\":\"apikey\"}}).then(function(response){return response.json();}).then(function(response){if(response.cod!==200){throw new Error();}setResponseObj(response);setLoading(false);}).catch(function(err){setError(true);setLoading(false);console.log(err.message);});}// .then(response => response.json())\n// .then(response => {\n//     console.log(response);\n// })\n// .catch(err => {\n//     console.error(err);\n// });\nreturn/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Find Current Weather Conditions\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:getForecast,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Enter City\",maxLength:\"50\",className:classes.textInput,value:city,onChange:function onChange(e){return setCity(e.target.value);}}),\" \",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"label\",{className:classes.Radio,children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"units\",checked:unit===\"imperial\",value:\"imperial\",className:classes.textInput,onChange:function onChange(e){return setUnit(e.target.value);}}),\"Fahrenheit\"]}),/*#__PURE__*/_jsxs(\"label\",{className:classes.Radio,children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"units\",checked:unit===\"metric\",value:\"metric\",className:classes.textInput,onChange:function onChange(e){return setUnit(e.target.value);}}),\"Celcius\"]}),/*#__PURE__*/_jsx(\"button\",{className:classes.Button,type:\"submit\",children:\"Get Forecast\"})]}),/*#__PURE__*/_jsx(Conditions,{responseObj:responseObj,error:error//new\n,loading:loading//new\n})]});};export default Forecast;","map":{"version":3,"sources":["/Users/smekiboy/Desktop/weather/src/components/Forecast/Forecast.js"],"names":["React","useState","Conditions","classes","Forecast","responseObj","setResponseObj","city","setCity","unit","setUnit","uriEncodedCity","encodeURIComponent","error","setError","loading","setLoading","getForecast","e","preventDefault","length","fetch","then","response","json","cod","Error","catch","err","console","log","message","textInput","target","value","Radio","Button"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Conditions from '../Conditions/Conditions';\nimport classes from './Forecast.module.css';\n\n\nconst Forecast = () => {\n\n    let [responseObj, setResponseObj] = useState({});\n    let [city, setCity] = useState('');\n    let [unit, setUnit] = useState('imperial');\n    const uriEncodedCity = encodeURIComponent(city);\n    let [error, setError] = useState(false);\n    let [loading, setLoading] = useState(false);\n\n    function getForecast(e) {\n        e.preventDefault();\n\n        if (city.length === 0) {\n            return setError(true);\n        }\n\n        // Clear state in preparation for new data\n        setError(false);\n        setResponseObj({});\n\n        setLoading(true);\n\n        let uriEncodedCity = encodeURIComponent(city);\n\n        fetch(`https://community-open-weather-map.p.rapidapi.com/weather?units=${unit}&q=${uriEncodedCity}`, {\n            \"method\": \"GET\",\n            \"headers\": {\n                \"x-rapidapi-host\": \"community-open-weather-map.p.rapidapi.com\",\n                \"x-rapidapi-key\": \"apikey\"\n            }\n        })\n            .then(response => response.json())\n            .then(response => {\n                if (response.cod !== 200) {\n                    throw new Error()\n                }\n\n                setResponseObj(response);\n                setLoading(false);\n            })\n            .catch(err => {\n                setError(true);\n                setLoading(false);\n                console.log(err.message);\n            });\n    }\n    // .then(response => response.json())\n    // .then(response => {\n    //     console.log(response);\n    // })\n    // .catch(err => {\n    //     console.error(err);\n    // });\n\n\n\n    return (\n        <div>\n            <h2>Find Current Weather Conditions</h2>\n            <form onSubmit={getForecast}>\n                <input\n                    type=\"text\"\n                    placeholder=\"Enter City\"\n                    maxLength=\"50\"\n                    className={classes.textInput}\n                    value={city}\n                    onChange={(e) => setCity(e.target.value)}\n                /> <br></br>\n                <label className={classes.Radio}>\n                    <input\n                        type=\"radio\"\n                        name=\"units\"\n                        checked={unit === \"imperial\"}\n                        value=\"imperial\"\n                        className={classes.textInput}\n                        onChange={(e) => setUnit(e.target.value)}\n                    />\n                    Fahrenheit\n                </label>\n                <label className={classes.Radio}>\n                    <input\n                        type=\"radio\"\n                        name=\"units\"\n                        checked={unit === \"metric\"}\n                        value=\"metric\"\n                        className={classes.textInput}\n                        onChange={(e) => setUnit(e.target.value)}\n                    />\n                    Celcius\n                </label>\n                <button className={classes.Button} type=\"submit\">Get Forecast</button>\n            </form>\n            <Conditions\n                responseObj={responseObj}\n                error={error} //new\n                loading={loading} //new\n            />\n        </div>\n    )\n}\n\nexport default Forecast;\n"]},"metadata":{},"sourceType":"module"}