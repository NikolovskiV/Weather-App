{"ast":null,"code":"var _jsxFileName = \"/Users/smekiboy/Desktop/weather/src/components/Forecast/Forecast.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Forecast = () => {\n  _s();\n\n  let [responseObj, setResponseObj] = useState({});\n\n  function getForecast() {\n    fetch(\"https://community-open-weather-map.p.rapidapi.com/weather?q=London%2Cuk&lat=0&lon=0&callback=test&id=2172797&lang=null&units=%22metric%22%20or%20%22imperial%22&mode=xml%2C%20html\", {\n      \"method\": \"GET\",\n      \"headers\": {\n        \"x-rapidapi-key\": \"81276b91dfmsh3b5c401d77af7bcp1ff94fjsn6d158937f68a\",\n        \"x-rapidapi-host\": \"community-open-weather-map.p.rapidapi.com\"\n      }\n    }).then(response => {\n      console.log(response);\n    }).catch(err => {\n      console.error(err);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Find Current Weather Conditions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: JSON.stringify(responseObj)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getForecast,\n      children: \"Get Forecast\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Forecast, \"E8Zk7vxGRG6Bk9xbN03z1f5dwXg=\");\n\n_c = Forecast;\nexport default Forecast;\n\nvar _c;\n\n$RefreshReg$(_c, \"Forecast\");","map":{"version":3,"sources":["/Users/smekiboy/Desktop/weather/src/components/Forecast/Forecast.js"],"names":["React","useState","Forecast","responseObj","setResponseObj","getForecast","fetch","then","response","console","log","catch","err","error","JSON","stringify"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAEnB,MAAI,CAACC,WAAD,EAAcC,cAAd,IAAgCH,QAAQ,CAAC,EAAD,CAA5C;;AAEA,WAASI,WAAT,GAAuB;AACnBC,IAAAA,KAAK,CAAC,oLAAD,EAAuL;AACxL,gBAAU,KAD8K;AAExL,iBAAW;AACP,0BAAkB,oDADX;AAEP,2BAAmB;AAFZ;AAF6K,KAAvL,CAAL,CAOKC,IAPL,CAOUC,QAAQ,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACH,KATL,EAUKG,KAVL,CAUWC,GAAG,IAAI;AACVH,MAAAA,OAAO,CAACI,KAAR,CAAcD,GAAd;AACH,KAZL;AAaH;;AAED,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,gBACKE,IAAI,CAACC,SAAL,CAAeZ,WAAf;AADL;AAAA;AAAA;AAAA;AAAA,YAFJ,eAKI;AAAQ,MAAA,OAAO,EAAEE,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CA7BD;;GAAMH,Q;;KAAAA,Q;AA+BN,eAAeA,QAAf","sourcesContent":["import React, { useState } from 'react';\n\nconst Forecast = () => {\n\n    let [responseObj, setResponseObj] = useState({});\n\n    function getForecast() {\n        fetch(\"https://community-open-weather-map.p.rapidapi.com/weather?q=London%2Cuk&lat=0&lon=0&callback=test&id=2172797&lang=null&units=%22metric%22%20or%20%22imperial%22&mode=xml%2C%20html\", {\n            \"method\": \"GET\",\n            \"headers\": {\n                \"x-rapidapi-key\": \"81276b91dfmsh3b5c401d77af7bcp1ff94fjsn6d158937f68a\",\n                \"x-rapidapi-host\": \"community-open-weather-map.p.rapidapi.com\"\n            }\n        })\n            .then(response => {\n                console.log(response);\n            })\n            .catch(err => {\n                console.error(err);\n            });\n    }\n\n    return (\n        <div>\n            <h2>Find Current Weather Conditions</h2>\n            <div>\n                {JSON.stringify(responseObj)}\n            </div>\n            <button onClick={getForecast}>Get Forecast</button>\n        </div>\n    )\n}\n\nexport default Forecast;\n"]},"metadata":{},"sourceType":"module"}