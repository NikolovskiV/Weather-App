{"ast":null,"code":"var _jsxFileName = \"/Users/smekiboy/Desktop/weather/src/components/WeatherCard.js\";\nimport React from 'react';\nimport { Card } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WeatherCard = ({\n  dt,\n  temp_min,\n  temp_max,\n  main,\n  icon\n}) => {\n  // create a date object with Date class constructor\n  const date = new Date(dt);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    style: {\n      width: '18rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n      variant: \"top\" // get the src from example url and pass the icon prop for icon code\n      ,\n      src: `http://openweathermap.org/img/wn/${icon}@2x.png`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n        children: main\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [date.toLocaleDateString(), \" - \", date.toLocaleTimeString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Min: \", temp_min]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Max: \", temp_max]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n};\n\n_c = WeatherCard;\nexport default WeatherCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherCard\");","map":{"version":3,"sources":["/Users/smekiboy/Desktop/weather/src/components/WeatherCard.js"],"names":["React","Card","WeatherCard","dt","temp_min","temp_max","main","icon","date","Date","width","toLocaleDateString","toLocaleTimeString"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,iBAArB;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,EAAF;AAAMC,EAAAA,QAAN;AAAgBC,EAAAA,QAAhB;AAA0BC,EAAAA,IAA1B;AAAgCC,EAAAA;AAAhC,CAAD,KAA4C;AAC5D;AACA,QAAMC,IAAI,GAAG,IAAIC,IAAJ,CAASN,EAAT,CAAb;AACA,sBACI,QAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEO,MAAAA,KAAK,EAAE;AAAT,KAAb;AAAA,4BACI,QAAC,IAAD,CAAM,GAAN;AACI,MAAA,OAAO,EAAC,KADZ,CAEI;AAFJ;AAGI,MAAA,GAAG,EAAG,oCAAmCH,IAAK;AAHlD;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI,QAAC,IAAD,CAAM,IAAN;AAAA,8BACI,QAAC,IAAD,CAAM,KAAN;AAAA,kBAAaD;AAAb;AAAA;AAAA;AAAA;AAAA,cADJ,eAGI;AAAA,mBACKE,IAAI,CAACG,kBAAL,EADL,SACmCH,IAAI,CAACI,kBAAL,EADnC;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAOI;AAAA,4BAASR,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ,eASI;AAAA,4BAASC,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH,CAvBD;;KAAMH,W;AAyBN,eAAeA,WAAf","sourcesContent":["import React from 'react';\nimport { Card } from 'react-bootstrap';\n\nconst WeatherCard = ({ dt, temp_min, temp_max, main, icon }) => {\n    // create a date object with Date class constructor\n    const date = new Date(dt);\n    return (\n        <Card style={{ width: '18rem' }}>\n            <Card.Img\n                variant=\"top\"\n                // get the src from example url and pass the icon prop for icon code\n                src={`http://openweathermap.org/img/wn/${icon}@2x.png`}\n            />\n            <Card.Body>\n                <Card.Title>{main}</Card.Title>\n                {/*  datetime is received in milliseconds, let's turn into local date time */}\n                <p>\n                    {date.toLocaleDateString()} - {date.toLocaleTimeString()}\n                </p>\n                {/* minimum temperature */}\n                <p>Min: {temp_min}</p>\n                {/* maximum temperature */}\n                <p>Max: {temp_max}</p>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default WeatherCard;"]},"metadata":{},"sourceType":"module"}