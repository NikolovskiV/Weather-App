{"ast":null,"code":"const MONTHS = {\n  \"01\": \"January\",\n  \"02\": \"February\",\n  \"03\": \"March\",\n  \"04\": \"April\",\n  \"05\": \"May\",\n  \"06\": \"June\",\n  \"07\": \"July\",\n  \"08\": \"August\",\n  \"09\": \"September\",\n  \"10\": \"August\",\n  \"11\": \"November\",\n  \"12\": \"December\"\n};\nexport const formatDate = function (dateString) {\n  const splitDateString = dateString.split('-');\n  const year = splitDateString[0];\n  const month = splitDateString[1];\n  const day = splitDateString[2];\n  const formattedDate = `${MONTHS[month]} ${day}, ${year}`;\n  return formattedDate;\n};\nexport const formatTime = function (timeIn24HrFormat) {\n  const splitTime = timeIn24HrFormat.split(':');\n  const hour = splitTime[0];\n  const minutes = splitTime[1];\n  let formmattedHour;\n  let dayNight;\n\n  if (+hour <= 11) {\n    // use \"+\" to force as a number\n    if (+hour <= 10) {\n      if (+hour === 0) {\n        formmattedHour = \"12\";\n      } else {\n        formmattedHour = hour[1]; // don't take the beginning zero\n      }\n    } else {\n      formmattedHour = hour;\n    }\n\n    dayNight = \"AM\";\n  } else {\n    formmattedHour = +hour - 12;\n\n    if (formmattedHour === 0) {\n      formmattedHour = \"12\";\n    }\n\n    dayNight = \"PM\";\n  }\n\n  return `${formmattedHour}:${minutes} ${dayNight}`;\n};","map":{"version":3,"sources":["/Users/smekiboy/Desktop/weather/src/_helpers/index.js"],"names":["MONTHS","formatDate","dateString","splitDateString","split","year","month","day","formattedDate","formatTime","timeIn24HrFormat","splitTime","hour","minutes","formmattedHour","dayNight"],"mappings":"AAAA,MAAMA,MAAM,GAAG;AACX,QAAM,SADK;AAEX,QAAM,UAFK;AAGX,QAAM,OAHK;AAIX,QAAM,OAJK;AAKX,QAAM,KALK;AAMX,QAAM,MANK;AAOX,QAAM,MAPK;AAQX,QAAM,QARK;AASX,QAAM,WATK;AAUX,QAAM,QAVK;AAWX,QAAM,UAXK;AAYX,QAAM;AAZK,CAAf;AAeA,OAAO,MAAMC,UAAU,GAAG,UAAUC,UAAV,EAAsB;AAC5C,QAAMC,eAAe,GAAGD,UAAU,CAACE,KAAX,CAAiB,GAAjB,CAAxB;AAEA,QAAMC,IAAI,GAAGF,eAAe,CAAC,CAAD,CAA5B;AACA,QAAMG,KAAK,GAAGH,eAAe,CAAC,CAAD,CAA7B;AACA,QAAMI,GAAG,GAAGJ,eAAe,CAAC,CAAD,CAA3B;AAEA,QAAMK,aAAa,GAAI,GAAER,MAAM,CAACM,KAAD,CAAQ,IAAGC,GAAI,KAAIF,IAAK,EAAvD;AAEA,SAAOG,aAAP;AACH,CAVM;AAYP,OAAO,MAAMC,UAAU,GAAG,UAAUC,gBAAV,EAA4B;AAClD,QAAMC,SAAS,GAAGD,gBAAgB,CAACN,KAAjB,CAAuB,GAAvB,CAAlB;AAEA,QAAMQ,IAAI,GAAGD,SAAS,CAAC,CAAD,CAAtB;AACA,QAAME,OAAO,GAAGF,SAAS,CAAC,CAAD,CAAzB;AAEA,MAAIG,cAAJ;AACA,MAAIC,QAAJ;;AAEA,MAAI,CAACH,IAAD,IAAS,EAAb,EAAiB;AAAE;AACf,QAAI,CAACA,IAAD,IAAS,EAAb,EAAiB;AACb,UAAI,CAACA,IAAD,KAAU,CAAd,EAAiB;AACbE,QAAAA,cAAc,GAAG,IAAjB;AACH,OAFD,MAEO;AACHA,QAAAA,cAAc,GAAGF,IAAI,CAAC,CAAD,CAArB,CADG,CACuB;AAC7B;AACJ,KAND,MAMO;AACHE,MAAAA,cAAc,GAAGF,IAAjB;AACH;;AAEDG,IAAAA,QAAQ,GAAG,IAAX;AACH,GAZD,MAYO;AACHD,IAAAA,cAAc,GAAG,CAACF,IAAD,GAAQ,EAAzB;;AACA,QAAIE,cAAc,KAAK,CAAvB,EAA0B;AACtBA,MAAAA,cAAc,GAAG,IAAjB;AACH;;AACDC,IAAAA,QAAQ,GAAG,IAAX;AACH;;AAED,SAAQ,GAAED,cAAe,IAAGD,OAAQ,IAAGE,QAAS,EAAhD;AACH,CA9BM","sourcesContent":["const MONTHS = {\n    \"01\": \"January\",\n    \"02\": \"February\",\n    \"03\": \"March\",\n    \"04\": \"April\",\n    \"05\": \"May\",\n    \"06\": \"June\",\n    \"07\": \"July\",\n    \"08\": \"August\",\n    \"09\": \"September\",\n    \"10\": \"August\",\n    \"11\": \"November\",\n    \"12\": \"December\"\n}\n\nexport const formatDate = function (dateString) {\n    const splitDateString = dateString.split('-');\n\n    const year = splitDateString[0];\n    const month = splitDateString[1];\n    const day = splitDateString[2];\n\n    const formattedDate = `${MONTHS[month]} ${day}, ${year}`;\n\n    return formattedDate;\n};\n\nexport const formatTime = function (timeIn24HrFormat) {\n    const splitTime = timeIn24HrFormat.split(':');\n\n    const hour = splitTime[0];\n    const minutes = splitTime[1];\n\n    let formmattedHour;\n    let dayNight;\n\n    if (+hour <= 11) { // use \"+\" to force as a number\n        if (+hour <= 10) {\n            if (+hour === 0) {\n                formmattedHour = \"12\";\n            } else {\n                formmattedHour = hour[1]; // don't take the beginning zero\n            }\n        } else {\n            formmattedHour = hour;\n        }\n\n        dayNight = \"AM\";\n    } else {\n        formmattedHour = +hour - 12;\n        if (formmattedHour === 0) {\n            formmattedHour = \"12\";\n        }\n        dayNight = \"PM\";\n    }\n\n    return `${formmattedHour}:${minutes} ${dayNight}`\n}"]},"metadata":{},"sourceType":"module"}