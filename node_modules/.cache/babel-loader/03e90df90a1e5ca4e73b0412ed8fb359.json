{"ast":null,"code":"var _jsxFileName = \"/Users/smekiboy/Desktop/weather/src/components/FahrenheitCard.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass FahrenheitCard extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.tempToConvertRef = /*#__PURE__*/React.createRef();\n\n    this.onChangeHandler = e => {\n      let newFahrenheit = this.tempToConvertRef.current.value;\n      let newCelsius;\n      newCelsius = (newFahrenheit - 32) * 5 / 9;\n      const rounded = Math.round(newCelsius * 1000) / 1000;\n      this.props.getNewTempValue(rounded, newFahrenheit);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Fahrenheit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        onChange: this.onChangeHandler,\n        value: this.props.fahrenheit,\n        ref: this.tempToConvertRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default FahrenheitCard;","map":{"version":3,"sources":["/Users/smekiboy/Desktop/weather/src/components/FahrenheitCard.js"],"names":["React","FahrenheitCard","Component","tempToConvertRef","createRef","onChangeHandler","e","newFahrenheit","current","value","newCelsius","rounded","Math","round","props","getNewTempValue","render","fahrenheit"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,cAAN,SAA6BD,KAAK,CAACE,SAAnC,CAA6C;AAAA;AAAA;AAAA,SAIzCC,gBAJyC,gBAItBH,KAAK,CAACI,SAAN,EAJsB;;AAAA,SASzCC,eATyC,GASvBC,CAAC,IAAI;AACnB,UAAIC,aAAa,GAAG,KAAKJ,gBAAL,CAAsBK,OAAtB,CAA8BC,KAAlD;AACA,UAAIC,UAAJ;AACAA,MAAAA,UAAU,GAAI,CAACH,aAAa,GAAG,EAAjB,IAAuB,CAAxB,GAA6B,CAA1C;AACA,YAAMI,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWH,UAAU,GAAG,IAAxB,IAAgC,IAAhD;AACA,WAAKI,KAAL,CAAWC,eAAX,CAA2BJ,OAA3B,EAAoCJ,aAApC;AACH,KAfwC;AAAA;;AAiBzCS,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AACI,QAAA,IAAI,EAAC,QADT;AAEI,QAAA,QAAQ,EAAE,KAAKX,eAFnB;AAGI,QAAA,KAAK,EAAE,KAAKS,KAAL,CAAWG,UAHtB;AAII,QAAA,GAAG,EAAE,KAAKd;AAJd;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAWH;;AA7BwC;;AAgC7C,eAAeF,cAAf","sourcesContent":["import React from \"react\";\n\nclass FahrenheitCard extends React.Component {\n\n    // we needed to get the current input box value and create a refrence\n    // for React be able to read it\n    tempToConvertRef = React.createRef();\n\n    // this function will convert our current fahrenheit value to celsius\n    // then pass its new value to our getNewTempValue function that will update\n    // our existing state\n    onChangeHandler = e => {\n        let newFahrenheit = this.tempToConvertRef.current.value;\n        let newCelsius;\n        newCelsius = ((newFahrenheit - 32) * 5) / 9;\n        const rounded = Math.round(newCelsius * 1000) / 1000;\n        this.props.getNewTempValue(rounded, newFahrenheit);\n    };\n\n    render() {\n        return (\n            <div>\n                <h1>Fahrenheit</h1>\n                <input\n                    type=\"number\"\n                    onChange={this.onChangeHandler}\n                    value={this.props.fahrenheit}\n                    ref={this.tempToConvertRef}\n                />\n            </div>\n        );\n    }\n}\n\nexport default FahrenheitCard;"]},"metadata":{},"sourceType":"module"}