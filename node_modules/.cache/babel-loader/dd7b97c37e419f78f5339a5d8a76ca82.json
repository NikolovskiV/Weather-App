{"ast":null,"code":"import logo from \"./logo.svg\";\nimport React, { Component } from 'react';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      latitude: null\n    };\n\n    this.getPosition = () => {\n      return new Promise(function (resolve, reject) {\n        navigator.geolocation.getCurrentPosition(resolve, reject);\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getPosition().them(position => {\n      console.log(position.coords.latitude); // this.setState({latitude: position.coords.latitude})\n    });\n  }\n\n  render() {\n    return 1;\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/smekiboy/Desktop/weather/src/App.js"],"names":["React","Component","App","state","latitude","getPosition","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","componentDidMount","them","position","console","log","coords","render"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBF,KAAK,CAACC,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCE,KADgC,GACxB;AACNC,MAAAA,QAAQ,EAAE;AADJ,KADwB;;AAAA,SAahCC,WAbgC,GAalB,MAAM;AAClB,aAAO,IAAIC,OAAJ,CAAY,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;AAC5CC,QAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyCJ,OAAzC,EAAkDC,MAAlD;AACD,OAFM,CAAP;AAGD,KAjB+B;AAAA;;AAKhCI,EAAAA,iBAAiB,GAAG;AAClB,SAAKP,WAAL,GACGQ,IADH,CACSC,QAAD,IAAc;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,MAAT,CAAgBb,QAA5B,EADkB,CAElB;AACD,KAJH;AAKD;;AAQDc,EAAAA,MAAM,GAAG;AACP,WAAO,CAAP;AACD;;AArB+B;;AAwBlC,eAAehB,GAAf","sourcesContent":["import logo from './logo.svg';\nimport React, { Component } from 'react';\nimport './App.css';\n\nclass App extends React.Component {\n  state = {\n    latitude: null\n  }\n\n  componentDidMount() {\n    this.getPosition()\n      .them((position) => {\n        console.log(position.coords.latitude);\n        // this.setState({latitude: position.coords.latitude})\n      })\n  }\n\n  getPosition = () => {\n    return new Promise(function (resolve, reject) {\n      navigator.geolocation.getCurrentPosition(resolve, reject);\n    })\n  }\n\n  render() {\n    return 1;\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}